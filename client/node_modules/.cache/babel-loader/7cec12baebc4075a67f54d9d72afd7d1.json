{"ast":null,"code":"var _jsxFileName = \"/home/thuong/hedspi-social/client/src/components/Input.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport Img from \"../img/img.png\";\nimport Attach from \"../img/attach.png\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { ChatContext } from \"../context/ChatContext\";\nimport { arrayUnion, doc, serverTimestamp, Timestamp, updateDoc } from \"firebase/firestore\";\nimport { db, storage } from \"../firebase\";\nimport { v4 as uuid } from \"uuid\";\nimport { getDownloadURL, ref, uploadBytesResumable } from \"firebase/storage\";\nimport { SendOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Input = () => {\n  _s();\n\n  const [text, setText] = useState(\"\");\n  const [img, setImg] = useState(null);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const {\n    data\n  } = useContext(ChatContext);\n\n  const handleSend = async () => {\n    if (img) {\n      const storageRef = ref(storage, uuid());\n      const uploadTask = uploadBytesResumable(storageRef, img);\n      uploadTask.on(error => {//TODO:Handle Error\n      }, () => {\n        getDownloadURL(uploadTask.snapshot.ref).then(async downloadURL => {\n          await updateDoc(doc(db, \"chats\", data.chatId), {\n            messages: arrayUnion({\n              id: uuid(),\n              text,\n              senderId: currentUser.uid,\n              date: Timestamp.now(),\n              img: downloadURL\n            })\n          });\n        });\n      });\n    } else {\n      await updateDoc(doc(db, \"chats\", data.chatId), {\n        messages: arrayUnion({\n          id: uuid(),\n          text,\n          senderId: currentUser.uid,\n          date: Timestamp.now()\n        })\n      });\n    }\n\n    await updateDoc(doc(db, \"userChats\", currentUser.uid), {\n      [data.chatId + \".lastMessage\"]: {\n        text\n      },\n      [data.chatId + \".isRead\"]: 1,\n      [data.chatId + \".date\"]: serverTimestamp()\n    });\n    await updateDoc(doc(db, \"userChats\", data.user.uid), {\n      [data.chatId + \".lastMessage\"]: {\n        text\n      },\n      [data.chatId + \".date\"]: serverTimestamp(),\n      [data.chatId + \".isRead\"]: 0\n    });\n    setText(\"\");\n    setImg(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8 \\u3092\\u5165\\u529B...\",\n      onChange: e => setText(e.target.value),\n      value: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"send\",\n      children: /*#__PURE__*/_jsxDEV(SendOutlined, {\n        style: {\n          fontSize: '24px',\n          color: \"\"\n        },\n        onClick: handleSend\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Input, \"LxBGUThHibwmApaPJomxIOCeC+Y=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/home/thuong/hedspi-social/client/src/components/Input.jsx"],"names":["React","useContext","useState","Img","Attach","AuthContext","ChatContext","arrayUnion","doc","serverTimestamp","Timestamp","updateDoc","db","storage","v4","uuid","getDownloadURL","ref","uploadBytesResumable","SendOutlined","Input","text","setText","img","setImg","currentUser","data","handleSend","storageRef","uploadTask","on","error","snapshot","then","downloadURL","chatId","messages","id","senderId","uid","date","now","user","e","target","value","fontSize","color"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport Img from \"../img/img.png\";\nimport Attach from \"../img/attach.png\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { ChatContext } from \"../context/ChatContext\";\nimport {\n  arrayUnion,\n  doc,\n  serverTimestamp,\n  Timestamp,\n  updateDoc,\n} from \"firebase/firestore\";\nimport { db, storage } from \"../firebase\";\nimport { v4 as uuid } from \"uuid\";\nimport { getDownloadURL, ref, uploadBytesResumable } from \"firebase/storage\";\nimport { SendOutlined } from '@ant-design/icons';\nconst Input = () => {\n  const [text, setText] = useState(\"\");\n  const [img, setImg] = useState(null);\n\n  const { currentUser } = useContext(AuthContext);\n  const { data } = useContext(ChatContext);\n\n  const handleSend = async () => {\n    if (img) {\n      const storageRef = ref(storage, uuid());\n\n      const uploadTask = uploadBytesResumable(storageRef, img);\n\n      uploadTask.on(\n        (error) => {\n          //TODO:Handle Error\n        },\n        () => {\n          getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n            await updateDoc(doc(db, \"chats\", data.chatId), {\n              messages: arrayUnion({\n                id: uuid(),\n                text,\n                senderId: currentUser.uid,\n                date: Timestamp.now(),\n                img: downloadURL,\n              }),\n            });\n          });\n        }\n      );\n    } else {\n      await updateDoc(doc(db, \"chats\", data.chatId), {\n        messages: arrayUnion({\n          id: uuid(),\n          text,\n          senderId: currentUser.uid,\n          date: Timestamp.now(),\n        }),\n      });\n    }\n\n    await updateDoc(doc(db, \"userChats\", currentUser.uid), {\n      [data.chatId + \".lastMessage\"]: {\n        text,\n      },\n      [data.chatId+ \".isRead\"]:1,\n      [data.chatId + \".date\"]: serverTimestamp(),\n    });\n\n    await updateDoc(doc(db, \"userChats\", data.user.uid), {\n      [data.chatId + \".lastMessage\"]: {\n        text,\n      },\n      [data.chatId + \".date\"]: serverTimestamp(),\n      [data.chatId+ \".isRead\"]:0\n    });\n\n    setText(\"\");\n    setImg(null);\n  };\n  return (\n    <div className=\"input\">\n      <input\n        type=\"text\"\n        placeholder=\"メッセージ を入力...\"\n        onChange={(e) => setText(e.target.value)}\n        value={text}\n      />\n      <div className=\"send\">\n       \n        {/* <input\n          type=\"file\"\n          style={{ display: \"none\" }}\n          id=\"file\"\n          onChange={(e) => setImg(e.target.files[0])}\n        />\n        <label htmlFor=\"file\">\n          <img src={Img} alt=\"\" />\n        </label> */}\n        <SendOutlined  style={{ fontSize: '24px',color:\"\" }} onClick={handleSend}/>\n      </div>\n    </div>\n  );\n};\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}