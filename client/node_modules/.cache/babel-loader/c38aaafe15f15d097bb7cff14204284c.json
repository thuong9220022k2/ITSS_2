{"ast":null,"code":"var _jsxFileName = \"/home/thuong/hedspi-social/client/src/pages/ApprovePost/ApprovePost.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport PostService from '../../service/PostService';\nimport { Button, Dropdown, Space, Avatar, Tag, Divider, Empty, message } from 'antd';\nimport { useContext } from 'react';\nimport { AuthContext } from '../../context/AuthContext';\nimport { UserContext } from '../../context/UserContext';\nimport { convertToTimeAgo } from '../../utils/timeUtil';\nimport { MoreOutlined, HeartOutlined, HeartFilled } from '@ant-design/icons';\nimport './approvePost.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ApprovePost() {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const {\n    listUser\n  } = useContext(UserContext);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n\n  const handleApprovePost = async (id, is_approved) => {\n    const res = await PostService.approvePost(id, {\n      is_approved\n    });\n\n    if (res) {\n      handleGetPost();\n\n      if (is_approved === 'approved') {\n        message.open({\n          type: 'success',\n          content: '投稿は承認されました。'\n        });\n      } else {\n        message.open({\n          type: 'success',\n          content: '投稿は拒否されました。'\n        });\n      }\n    }\n  };\n\n  const handleGetPost = async () => {\n    let newPosts = await PostService.getPendingPosts();\n    setPosts(newPosts);\n  };\n\n  const handleDeletePost = useCallback(async postId => {\n    const result = await PostService.deletePost(postId);\n\n    if (result) {\n      setPosts(oldPost => oldPost.filter(post => post._id != postId));\n    }\n  }, [posts]);\n  useEffect(() => {\n    handleGetPost();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"approve-containter\",\n    children: [posts.map(post => {\n      var _post$tags;\n\n      const postUser = listUser[post.uid];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post mt-16\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-header\",\n          children: /*#__PURE__*/_jsxDEV(Space, {\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              src: postUser === null || postUser === void 0 ? void 0 : postUser.photoURL\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Space, {\n              direction: \"vertical\",\n              size: 4,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post-username\",\n                children: postUser === null || postUser === void 0 ? void 0 : postUser.displayName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post-timestamp\",\n                children: convertToTimeAgo(post === null || post === void 0 ? void 0 : post.createdAt)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-content\",\n          dangerouslySetInnerHTML: {\n            __html: post.content\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"readmore\",\n          id: \"readmore\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-tag mt-16\",\n          children: (_post$tags = post.tags) === null || _post$tags === void 0 ? void 0 : _post$tags.map(tag => {\n            return /*#__PURE__*/_jsxDEV(Tag, {\n              children: [\"#\", tag]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 40\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          style: {\n            margin: '8px 0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-action\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            danger: true,\n            className: \"mr-8\",\n            style: {\n              flexGrow: 1\n            },\n            onClick: () => handleApprovePost(post._id, 'rejected'),\n            children: \"\\u62D2\\u5426\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            ghost: true,\n            style: {\n              flexGrow: 1\n            },\n            onClick: () => handleApprovePost(post._id, 'approved'),\n            children: \"\\u627F\\u8A8D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this);\n    }), posts.length <= 0 && /*#__PURE__*/_jsxDEV(Empty, {\n      description: '現在は審査待ちの投稿はありません。'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ApprovePost, \"vNdZNEDYBz4Y/CVug4iXtd6A3gE=\");\n\n_c = ApprovePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApprovePost\");","map":{"version":3,"sources":["/home/thuong/hedspi-social/client/src/pages/ApprovePost/ApprovePost.jsx"],"names":["React","useCallback","useEffect","useState","PostService","Button","Dropdown","Space","Avatar","Tag","Divider","Empty","message","useContext","AuthContext","UserContext","convertToTimeAgo","MoreOutlined","HeartOutlined","HeartFilled","ApprovePost","posts","setPosts","listUser","currentUser","handleApprovePost","id","is_approved","res","approvePost","handleGetPost","open","type","content","newPosts","getPendingPosts","handleDeletePost","postId","result","deletePost","oldPost","filter","post","_id","map","postUser","uid","photoURL","displayName","createdAt","__html","tags","tag","margin","flexGrow","length"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport PostService from '../../service/PostService';\nimport { Button, Dropdown, Space, Avatar, Tag, Divider, Empty, message } from 'antd';\nimport { useContext } from 'react';\nimport { AuthContext } from '../../context/AuthContext';\nimport { UserContext } from '../../context/UserContext';\nimport { convertToTimeAgo } from '../../utils/timeUtil';\nimport { MoreOutlined, HeartOutlined, HeartFilled } from '@ant-design/icons';\n\nimport './approvePost.scss';\n\nexport default function ApprovePost() {\n    const [posts, setPosts] = useState([]);\n    const { listUser } = useContext(UserContext);\n    const { currentUser } = useContext(AuthContext);\n\n    const handleApprovePost = async (id, is_approved) => {\n        const res = await PostService.approvePost(id, { is_approved });\n        if (res) {\n            handleGetPost();\n            if (is_approved === 'approved') {\n                message.open({\n                    type: 'success',\n                    content: '投稿は承認されました。',\n                });\n            } else {\n                message.open({\n                    type: 'success',\n                    content: '投稿は拒否されました。',\n                });\n            }\n        }\n    };\n    const handleGetPost = async () => {\n        let newPosts = await PostService.getPendingPosts();\n        setPosts(newPosts);\n    };\n    const handleDeletePost = useCallback(\n        async (postId) => {\n            const result = await PostService.deletePost(postId);\n            if (result) {\n                setPosts((oldPost) => oldPost.filter((post) => post._id != postId));\n            }\n        },\n        [posts]\n    );\n    useEffect(() => {\n        handleGetPost();\n    }, []);\n\n    return (\n        <div className='approve-containter'>\n            {posts.map((post) => {\n                const postUser = listUser[post.uid];\n                return (\n                    <div className='post mt-16'>\n                        <div className='post-header'>\n                            <Space>\n                                <Avatar src={postUser?.photoURL}></Avatar>\n                                <Space direction='vertical' size={4}>\n                                    <div className='post-username'>{postUser?.displayName}</div>\n                                    <div className='post-timestamp'>{convertToTimeAgo(post?.createdAt)}</div>\n                                </Space>\n                            </Space>\n                        </div>\n\n                        <div className='post-content' dangerouslySetInnerHTML={{ __html: post.content }}></div>\n                        <input type='checkbox' name='readmore' id='readmore'></input>\n\n                        <div className='post-tag mt-16'>\n                            {post.tags?.map((tag) => {\n                                return <Tag>#{tag}</Tag>;\n                            })}\n                        </div>\n                        <Divider style={{ margin: '8px 0' }}></Divider>\n\n                        <div className='post-action'>\n                            <Button danger className='mr-8' style={{ flexGrow: 1 }} onClick={() => handleApprovePost(post._id, 'rejected')}>\n                                拒否\n                            </Button>\n                            <Button type='primary' ghost style={{ flexGrow: 1 }} onClick={() => handleApprovePost(post._id, 'approved')}>\n                                承認\n                            </Button>\n                        </div>\n                    </div>\n                );\n            })}\n            {posts.length <= 0 && <Empty description={'現在は審査待ちの投稿はありません。'} />}\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}